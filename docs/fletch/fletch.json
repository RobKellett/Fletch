{"name":"fletch","qualifiedName":"fletch/fletch","comment":"<p>Convenience functions for manipulating groups of HTML elements.</p>","variables":{},"functions":{"setters":{},"getters":{},"constructors":{},"operators":{},"methods":{"$":{"name":"$","qualifiedName":"fletch/fletch.$","comment":"<p>Constructs a <a>fletch/fletch.Fletch</a> wrapper from any valid source of\n<a>fletch/dart-dom-html.Element</a>s.</p>\n<p>Valid sources are:</p><ul><li>\n<p>A <a>dart-core.String</a> CSS selector used to match elements</p></li><li>\n<p>A <a>dart-core.String</a> of HTML to parse into an element</p></li><li>\n<p>An <a>fletch/dart-dom-html.Element</a></p></li><li>\n<p>An <a>dart-core.Iterable</a> of <a>fletch/dart-dom-html.Element</a></p></li><li>\n<p>A <a>fletch/dart-dom-html.HtmlDocument</a></p></li><li>\n<p>A <a>fletch/fletch.Fletch</a> (will simply return the original object)</p></li></ul>\n<p>If a second parameter is supplied, it will be used as\nthe top-level element to run the CSS selector as. For\nother sources, the second parameter is ignored.</p>\n<p>This is shorthand for <code>new Fletch(selection, context)</code></p>","commentFrom":"","inheritedFrom":"","static":false,"abstract":false,"constant":false,"return":[{"outer":"fletch/fletch.Fletch","inner":[]}],"parameters":{"selection":{"name":"selection","optional":false,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]},"context":{"name":"context","optional":true,"named":false,"default":false,"type":[{"outer":"dynamic","inner":[]}],"value":null,"annotations":[]}},"annotations":[]}}},"classes":{"class":[{"name":"AttributeCollection","qualifiedName":"fletch/fletch.AttributeCollection"},{"name":"ClassCollection","qualifiedName":"fletch/fletch.ClassCollection"},{"name":"EventCollection","qualifiedName":"fletch/fletch.EventCollection"},{"name":"EventFunctor","qualifiedName":"fletch/fletch.EventFunctor"},{"name":"EventSubscription","qualifiedName":"fletch/fletch.EventSubscription"},{"name":"Fletch","qualifiedName":"fletch/fletch.Fletch","preview":"<p>A convenience wrapper around a group of <a>fletch/dart-dom-html.Element</a>s.</p>"},{"name":"StyleCollection","qualifiedName":"fletch/fletch.StyleCollection"}],"typedef":{"FletchEventListener":{"name":"FletchEventListener","qualifiedName":"fletch/fletch.FletchEventListener","comment":"<p>The signature for event listeners handled by Fletch.</p>\n<p>event is a reference to the fired event, and self is\na reference to the element owning the listener.</p>","return":"void","parameters":{"event":{"name":"event","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Event","inner":[]}],"value":null,"annotations":[]},"self":{"name":"self","optional":false,"named":false,"default":false,"type":[{"outer":"dart-dom-html.Element","inner":[]}],"value":null,"annotations":[]}},"annotations":[],"generics":{},"preview":"<p>The signature for event listeners handled by Fletch.</p>"}},"error":[]},"packageName":"fletch","packageIntro":"<h1>Fletch <a href=\"https://drone.io/github.com/RobKellett/Fletch/latest\"><a href=\"https://drone.io/github.com/RobKellett/Fletch/status.png\"><img alt=\"Build Status\" src=\"https://drone.io/github.com/RobKellett/Fletch/status.png\"></img></a></a></h1>\n<h3>jQuery for Dart</h3>\n<p>Fletch is a <a href=\"https://www.dartlang.org/\">Dart</a> library aiming to provide similar\nfunctionality to <a href=\"http://jquery.com/\">jQuery</a>. However, Fletch is <em>not</em>\ndesigned to be API-compatible with jQuery, instead preferring to take advantage\nof Dart features and design patterns.</p>\n<p>For example, here is a snippet of jQuery:</p>\n<pre class=\"javascript\"><code>$(\"&lt;a&gt;\").text(\"Dart is cool!\")\n        .attr(\"href\", \"https://www.dartlang.org/\")\n        .style(\"font-weight\", \"bold\")\n        .appendTo(\"body\");\n</code></pre>\n<p>Here is the equivalent code in Fletch:</p>\n<pre class=\"dart\"><code>$(\"&lt;a&gt;\")..text = \"Dart is cool!\"\n        ..attr[\"href\"] = \"https://www.dartlang.org/\"\n        ..style[\"font-weight\"] = \"bold\"\n        ..appendTo(\"body\");\n</code></pre>\n<p>Full API documentation is available <a href=\"http://robkellett.github.io/Fletch/\">here</a>.</p>\n<p>Fletch is very much a work in progress. So far, Fletch supports the most common\ncases for manipulating the DOM, styles, attributes, events, and form data.\nFletch should be considered <strong>alpha quality</strong>, as the public-facing API may \nchange radically between releases.</p>\n<h2>Installing</h2>\n<p><a href=\"http://pub.dartlang.org/packages/fletch\">Fletch is available on <strong>pub</strong>.</a> Add\n\"fletch\" as a dependency and run <code>pub install</code>. Then, just import Fletch into\nyour code with <code>import 'package:fletch/fletch.dart';</code> and you're all set!</p>\n<p>Fletch is released under the <strong>ISC License</strong>, which is functionally equivalent\nto the BSD-2 and MIT licenses. See the <code>LICENSE</code> file for more information.</p>"}